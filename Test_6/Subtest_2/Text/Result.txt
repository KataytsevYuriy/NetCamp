	У текстовому файлі задано текст, між словами якого може бути довільна кількість пропусків...
	Знаки пунктуації використані правильно і є прив’язані до слів.
	Створити клас для роботи з текстом, який вміє читати інформацію з потоку та видрукувати інформацію, а також матиме методи для редагування та обробки інформації.
	Поділити текст на речення та видрукувати кожне речення з абзацу у вихідний файл “Result.txt”, який обов’язково додати до репозиторію.
	Вважати, що речення можуть бути в кількох стрічках.
	На екран видрукувати найдовші та найкоротші слова у кожному реченні.
	Внутри платформы .NET определено несколько пространств имен, которые позволяют взаимодействовать с реляционными базами данных.
	Все вместе эти пространства имен известны как ADO.NET.
	В настоящей главе вы сначала узнаете об общей роли инфраструктуры ADO.NET, а также основных типов и пространств имен, после чего будет обсуждаться тема поставщиков данных ADO.NET.
	Платформа .NET поддерживает многочисленные поставщики данных (как являющиеся частью .NET Framework, так и доступные от независимых разработчиков), каждый из которых оптимизирован для взаимодействия с конкретной системой управления базами данных (СУБД), например, Microsoft SQL Server, Oracle, MySQL и т.д.
	После освоения общей функциональности, предлагаемой различными поставщиками данных, мы рассмотрим паттерн фабрики поставщиков данных.
	Вы увидите, что с использованием типов из пространства имен System.Data.Common (и связанного файла Арр.config) можно строить единственную кодовую базу, которая способна динамически выбирать поставщик данных без необходимости в повторной компиляции или развертывании кодовой базы приложения.
	Далее вы научитесь работать напрямую с поставщиком баз данных SQL Server, создавая и открывая подключения для извлечения данных и затем вставляя, обновляя и удаляя данные, и ознакомитесь с темой транзакций базы данных.
	Наконец, вы запустите средство массового копирования SQL Server с применением ADO-NIsT для загрузки списка записей внутрь базы данных.
