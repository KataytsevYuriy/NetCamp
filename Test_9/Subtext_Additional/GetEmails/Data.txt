В ADO.NET нет  .tree_tyt@ma.ty  единого набора типов, которые"e3t.yt@ma.ty"tre.etyt@ma.ty tree_tyt@ma.ty взаимодействовали#e3etyt@ma.ty бы с множеством СУБД. Взамен ADO.NET поддерживает многочисленные поставщики данных, каждый из которых оптимизирован для взаимодействия со специфичной СУБД. Первое преимущество такого подхода в том, что вы можете запрограммировать специализированный поставщик данных для доступа к любым уникальным средствам отдельной СУБД. Второе преимущество связано с тем, что поставщик данных может подключаться непосредственно к механизму интересующей СУБД без какого-либо промежуточного уровня отображения.
Выражаясь просто, поставщик данных — это набор типов, определенных в отдельном пространстве имен, которым известно, как взаимодействовать с конкретным
источником  tree_tyt@ma.укр  данных. Безотносительно к тому, какой поставщик данных применяется,
каждый тестtest@ююю.com   из них определяет набор классов, предоставляющих основную функциональность.
В табл. 21.1 описаны некоторые распространенные основные типы, их базовые классы (определенные в пространстве имен System. Data.Common) и ключевые интерфейсы(определенные в пространстве имен System. Data), которые они реализуют.